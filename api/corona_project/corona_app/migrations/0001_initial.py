# Generated by Django 3.0.5 on 2020-04-22 01:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CoronaApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default='a', max_length=1000)),
                ('timeslot', models.CharField(default='00.00.01.01.2020', max_length=100)),
                ('status', models.IntegerField(default=0)),
                ('latitude', models.FloatField(default=0)),
                ('longitude', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(default=0)),
                ('height', models.IntegerField(default=0)),
                ('weight', models.IntegerField(default=0)),
                ('diabetes', models.BooleanField(default=False)),
                ('kidney', models.BooleanField(default=False)),
                ('heart', models.BooleanField(default=False)),
                ('lungs', models.BooleanField(default=False)),
                ('stroke', models.BooleanField(default=False)),
                ('hypertension', models.BooleanField(default=False)),
                ('hiv', models.BooleanField(default=False)),
                ('transplant', models.BooleanField(default=False)),
                ('fever', models.IntegerField(choices=[(0, 'No'), (1, 'If Yes, then Temperature between 98.6 to 100.4 ^C'), (2, 'If Yes, then Temperature between 100.4 to 104 ^C'), (3, 'If Yes, then fever that comes and goes'), (4, 'If Yes, then have not checked the Temperature')], default=0)),
                ('cough', models.IntegerField(choices=[(0, 'No'), (1, 'If Yes, then Dry Cough'), (2, 'If Yes, then Cough with sputum'), (3, 'If Yes, then Cough with chest pain'), (4, 'If Yes, then Cough with abdominal pain')], default=0)),
                ('breathlessness', models.BooleanField(default=False)),
                ('fatigue', models.BooleanField(default=False)),
                ('joint_pain', models.BooleanField(default=False)),
                ('loss_of_taste_and_smell', models.BooleanField(default=False)),
                ('sore_throat', models.BooleanField(default=False)),
                ('nasal_congestion', models.BooleanField(default=False)),
                ('headache', models.BooleanField(default=False)),
                ('chills', models.BooleanField(default=False)),
                ('nausea_or_vomiting', models.BooleanField(default=False)),
                ('diarrhea', models.BooleanField(default=False)),
                ('conjunctival_congestion', models.BooleanField(default=False)),
                ('symptoms_improvement', models.IntegerField(choices=[(0, 'Improved'), (1, 'No change'), (2, 'Worsened'), (3, 'Worsened considerably')], default=0)),
                ('domestic_flight', models.BooleanField(default=False)),
                ('domestic_train', models.BooleanField(default=False)),
                ('domestic_auto', models.BooleanField(default=False)),
                ('domestic_cab', models.BooleanField(default=False)),
                ('domestic_airport_from', models.CharField(blank=True, default=' ', max_length=1000)),
                ('domestic_airport_to', models.CharField(blank=True, default=' ', max_length=1000)),
                ('current_state', models.CharField(blank=True, default=' ', max_length=1000)),
                ('international_mode', models.BooleanField(default=False)),
                ('country_travelled', models.CharField(blank=True, default=' ', max_length=1000)),
            ],
        ),
    ]
